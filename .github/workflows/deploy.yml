name: Build and deploy backe-end with Docker
run-name: ${{ github.actor }} is building a new DockerFile on push
on:
  push:
    branches:
      - master
      - 20-additional-maintenance-on-back-end
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: nkuusik/django-paralleltext

      - name: Build and push Docker image
        run: docker build back/paralleltext/. -t nkuusik/django-paralleltext && docker push nkuusik/django-paralleltext

      - name: Deploy Docker container on remote server
        env:
            PRIVATE_KEY: ${{ secrets.AWS_KEY }}
            HOSTNAME: ${{secrets.AWS_HOST}}
            USER_NAME: ${{secrets.AWS_USER}}
      
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '

              # Stop and remove all previous Docker containers.
            sudo docker ps -aq | sudo xargs docker stop |sudo  xargs docker rm
            sudo docker system prune -a -f
              # Deploy Docker container with new Docker image
            cd deploy/
            sudo docker compose up -d'